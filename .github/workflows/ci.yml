name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create necessary directories
      run: |
        mkdir -p logs data

    - name: Lint with flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Type check with mypy
      run: |
        mypy src/ --ignore-missing-imports

    - name: Check code formatting with black
      run: |
        black --check src/ tests/

    - name: Test with pytest and coverage
      run: |
        pytest tests/ -v --cov=src --cov-report=xml --cov-report=html --cov-report=term-missing --cov-fail-under=80

    - name: Run BDD tests with Behave
      run: |
        behave features/ -v

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    name: Deploy to Google App Engine
    runs-on: ubuntu-latest
    needs: test
    # Only deploy on push to main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: DEV

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Create requirements.txt artifact
      run: |
        cp requirements.txt requirements.txt.bak

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Inject secrets into app.yaml
      run: |
        # Insert FIREBASE_PROJECT_ID into the env_variables section
        sed -i '/PYTHONUNBUFFERED: "1"/a\
        \
        \ \ # Firebase Configuration (injected from GitHub Secrets)\
        \ \ FIREBASE_PROJECT_ID: "${{ secrets.GCP_PROJECT_ID }}"' app.yaml

    - name: Deploy to App Engine
      run: |
        gcloud app deploy app.yaml \
          --quiet \
          --project=${{ secrets.GCP_PROJECT_ID }} \
          --version=$(echo $GITHUB_SHA | cut -c1-7) \
          --promote

    - name: Verify deployment
      run: |
        gcloud app versions list \
          --project=${{ secrets.GCP_PROJECT_ID }} \
          --service=default \
          --sort-by=~version.createTime \
          --limit=1

    - name: Upload deployment artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-info
        path: |
          app.yaml
          requirements.txt
        retention-days: 30
